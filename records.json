{"<Content alias=\"adaptiveBitrate1\" />":"Adaptive bitrate (ABR) refers to features that enable dynamic adjustments to video quality—to optimise for end-user experience under diverse network conditions. ABR ensures that every participant is able to consume the highest possible quality video in conferencing or streaming use-cases, based on their bandwidth constraints.\r\n\r\nIn addition to network, ABR can also optimise for the right video quality based on the size of the video element. For example, a video call running on active speaker layout has larger video tiles that require higher quality video track. These adjustments can be made dynamically with adaptive bitrate.\r\n\r\nLearn about how 100ms enables adaptive bitrate in:\r\n\r\n* [Conferencing scenarios](#abr-in-conferencing)\r\n* [Live streaming scenarios](#abr-in-live-streaming)\r\n\r\n## ABR in conferencing\r\n\r\nPeers in 100ms rooms can publish multiple video quality levels simultaneously. This is called “simulcast” in 100ms. Peers that consume these video tracks can upgrade or downgrade video quality.\r\n\r\nYou can enable simulcast on the publishing role's template, and use manual or automatic layer changes on the subscriber's side.\r\n\r\n### Publisher-side configuration\r\n\r\nSimulcast configuration is opt-in and can be enabled on the role's configuration inside your template. The role's publish video quality determines video quality layers on simulcast. For example, a role configured to publish at 720p can simulcast 180p, 360p and 720p layers.\r\n\r\n| Video publish quality | Possible simulcast layers |\r\n|-----------------------|---------------------------|\r\n| 1080p                 | 1080p, 540p, 270p         |\r\n| 720p                  | 720p, 360p, 180p          |\r\n| 480p                  | 480p, 240p                |\r\n| 360p                  | 360p, 180p                |\r\n| 240p                  | 240p                      |\r\n| 180p                  | 180p                      |\r\n\r\n#### Enable via dashboard\r\n\r\nEnable \"can publish simulcast\" on the template page for a particular role. You can also specify how many video quality layers will be simultaneously published by peers of this role. The peer will publish these layers assuming network bandwidth permits.\r\n\r\n![Simulcast configuration](/docs/guides/simulcast-on-dashboard.png)\r\n\r\n#### Enable via API\r\n\r\nUpdate role configuration using the [server-side API](/docs/server-side/v2/policy/create-update-role). The simulcast config payload can include 2 or 3 layers that scale down the selected publish layer.\r\n\r\nIn the example below, the role is configured to publish 720p with 3 simulcast layers:\r\n\r\n* `f` for full with scale down factor of 1 (= 720p)\r\n* `h` for half with scale down factor of 2 (= 360p)\r\n* `q` for quarter with scale down factor of 4 (= 180p)","<Content alias=\"adaptiveBitrate2\" />":"\r\n### Subscribe-side behavior\r\n\r\n#### Manual layer selection\r\n\r\nThe 100ms client-side SDKs provide methods to set a preferred quality layer for a remote peer's video track. See docs for your preferred platform:\r\n\r\n* [JavaScript](/docs/javascript/v2/advanced-features/simulcast)\r\n* [iOS](/docs/ios/v2/advanced-features/simulcast)\r\n* [Android](/docs/android/v2/advanced-features/simulcast)\r\n\r\n#### Automatic layer selection\r\n\r\n<br/>\r\n<video loop=\"true\" controls=\"controls\" id=\"vid\" muted>\r\n    <source src=\"/docs/guides/simulcast-tile-size-1.mp4\" type=\"video/mp4\" />\r\n</video>\r\n<br/>\r\n\r\n- Based on video tile size: The SDK automatically ensures appropriate video layer is subscribed to, as demonstrated in the video above. For example, if the video element is 360 px in width, 360p or the closest layer will be selected.\r\n    - **JavaScript**: The `useVideo` hook in the 100ms React SDK auto-selects the appropriate video quality layer.\r\n    - **iOS**: `HMSVideoView` can auto-select video quality layer.\r\n    - **Android**: `HMSVideoView` ([see docs](/docs/android/v2/migrations/surfaceview-migration)) can auto-select video quality layer.\r\n- Based on network quality: ABR will work alongside subscribe degradation and auto-downgrade video quality for peers. This is _coming soon_.\r\n\r\n## ABR in live streaming\r\n\r\n100ms uses the HTTP Live Streaming (HLS) protocol in live streaming scenarios. HLS supports adaptive bitrate out of the box, and HLS video players can automatically or manually pick appropriate video quality levels.\r\n\r\nLearn more on [how HLS works on our blog](https://www.100ms.live/blog/hls-101-beginners-guide).\r\n","<Content alias=\"androidSdkVersionShield\" />":"[![](https://img.shields.io/badge/dynamic/xml.svg?label=100ms&color=blue&query=%2F%2Fmetadata%2Fversioning%2Flatest&url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Flive%2F100ms%2Fandroid-sdk%2Fmaven-metadata.xml)](https://jitpack.io/#100mslive/android-sdk)\n","<Content alias=\"basics\" />":"## Architecture\n\n100ms is a cloud platform that allows developers to add video and audio conferencing to Web, Android and iOS applications.\n\nThe platform provides REST APIs, SDKs, and a dashboard that makes it simple to capture, distribute, record, and render live interactive audio, video.\n\nAny application built using 100ms' SDK has 2 components.\n\n-   **Client:** Use 100ms android, iOS, Web SDKs to manage connections, room states, render audio/video.\n\n-   **Server:** Use 100ms' APIs or dashboard to create rooms, setup room templates, trigger recording or RTMP streaming, access events.\n\n![Architecture](/docs/docs/v2/arch.png)\n\n## Basic Concepts\n\n-   `Room` A room is the basic object that 100ms SDKs return on successful connection. This contains references to peers, tracks and everything you need to render a live a/v or live streaming app.\n-   `Peer` A peer is the object returned by 100ms SDKs that contains all information about a user - name, role, video track etc.\n-   `Session` A session depicts activity in a room. A session is created when one or more peers join a room to communicate with each other. A single room can have multiple sessions; a unique ID will be assigned to each session. The maximum allowed duration for a session on the 100ms platform is 12 hours.\n-   `Track` A track is a segment of media (audio/video) captured from the peer's camera and microphone. Peers in a session publish local tracks and subscribe to remote tracks from other peers.\n-   `Role` A role defines who can a peer see/hear, the quality at which they publish their video, whether they have permissions to publish video/screenshare, mute someone, change someone's role.\n-   `Template` A template is a collection of roles, room settings, recording and RTMP settings (if used), that are used by the SDK to decide which geography to connect to, which tracks to return to the client, whether to turn on recording when a room is created, etc. Each room is associated with a template.\n-   `Destinations` Destinations is used to save audio/video calls for offline viewing. 100ms supports 2 kinds of recording - [SFU recording](/docs/javascript/v2/foundation/recordings#sfu-recording-advanced) and [Browser recording](/docs/javascript/v2/foundation/recordings#browser-recording-recommended). Also, `HLS enabled` configuration will allow you to live stream your room over HLS.\n-   `RTMP` RTMP streaming is used to live stream your video conferencing apps to platforms like YouTube, Twitch, Facebook, MUX, etc.\n-   `Webhooks` Webhook is an HTTP(S) endpoint used for pushing the notifications to your application. It will be invoked by 100ms servers to notify events of your room.\n-   `Workspace` A workspace is an isolated environment which contains account data like templates, rooms, room and session history, etc. You can use workspaces to represent environments like “Production” and “Development” and invite team members to a workspace.\n\n## What are the steps to build a live app with 100ms?\n1. Sign up on 100ms using the **Try For Free** button in the top navbar.\n\n![Signup for 100ms account](/docs/docs/v2/signup.png)\n\n2. Once you're logged in to the dashboard, click on `Create Your First App`\n\n![Signup for 100ms account](/docs/docs/v2/create-your-first-app.png)\n\n3. **Hover** on one of the Starter Kits. Deploy one of them. (We will use the **Video Conference Starter Kit** for this example)\n\n![Dashboard _ 100ms.png](/docs/docs/v2/select-starter-kit.png)\n\n4. Select your account type and fill in the details\n\n![Dashboard _ 100ms.png](/docs/docs/v2/personal-details.png)\n\n5. Choose a deployment option. This could be 100ms or Vercel (based on the Starter Kit you are deploying)\n\n![Video Conferencing Starter Kit](/docs/docs/v2/choose-your-deployment.png)\n\n6. Enter a subdomain of your choice. Please avoid entering https/http/www or dots while entering the subdomain. Select a region closest to you and hit Continue.\n\n![choose subdomain](/docs/docs/v2/choose-subdomain.png)\n\n7. Join or Invite someone to your deployed app with one of the roles:\n\n\n![join or invite](/docs/docs/v2/demo-your-app.png)\n\n## Where should I start?\n","<Content alias=\"bulkRoleChangeErrors\" />":"### Bulk Role Change Errors\n\nYou may get the following errors for bulk role change:\n\n| Message                                | Meaning                                                  |\n|----------------------------------------|----------------------------------------------------------|\n| invalid role                   | A role in the list of roles to change does not exist in this room.           |\n| target role clash with requested roles | the 'toRole' is also listed as one to change to 'toRole' |\n| role does not have required permission | Peer does not have role change permission.               |\n| peer left                              | The peer who's role was to be changed has left.          |\n| role invalid                           | The 'toRole' is invalid.                                 |","<Content alias=\"faq\" />":"-   [General](#general)\n-   [Getting started](#getting-started)\n-   [Account management](#account-management)\n-   [Workspaces](#workspaces)\n-   [Pricing and billing](#pricing-and-billing)\n-   [Authentication and tokens](#authentication-and-tokens)\n-   [Recording](#recording)\n-   [Chat](#chat)\n-   [Interactive Live streaming](#interactive-live-streaming)\n-   [External streaming](#external-streaming-rtmp)\n-   [Plugins](#plugins)\n-   [Network and quality](#network-and-quality)\n-   [Limits](#limits)\n-   [Server-side](#server-side)\n-   [Analytics](#analytics)\n\n## General\n\n## What is the inspiration behind the name, 100ms?\n\nWe got the name 100ms inspired by the \"100ms latency rule\" concept from Gmail creator Paul Buchheit, who said that 100ms is the threshold \"where interactions feel instantaneous\"\n\n## Are your services supported in all countries?\n\nYes, our services are supported in all countries.\n\n## Is 100ms fully optimized for mobile devices?\n\nOur mobile SDKs are optimized to support most of the features and capabilities that are supported in our Web SDK. However, there could be a delay in making some features available in Mobile SDKs whereas the same is available on the Web SDK.\n\nFor example, Virtual background feature is available as a beta feature on Web, Android and iOS native platforms but not in React Native and Flutter.\n\n## Can I delete apps from dashboard?\n\nYes, you can delete an App from your [dashboard](https://dashboard.100ms.live/dashboard) by hovering over the app and clicking on the trash icon.\n\n## Can I delete rooms via dashboard or API?\n\nNo, you cannot delete a room. We don't support the \"delete room\" functionality as it would lead to losing all data associated with the room. However, we support the below options based on the actual requirement of why you want to delete the room(s):\n\n-   **Creating new rooms for every session**: You can create as many rooms as you want, as we don't have any limit for room creation.\n-   **Disable room**: If you don't want future room join requests for a particular room, you can disable a room from the dashboard or via [server API](/server-side/v2/Rooms/disable-or-enable).\n-   **Dev & Prod Env**: If you want to delete rooms from your account as you transition from Development to the Production stage, we recommend using \"Workspaces.\" It enables you to create two or more workspaces per your need and isolate the data for each workspace. Please check this blog for more information.\n\n## Getting started\n\n## How do I get started with integrating video functionality to my website using 100ms?\n\nYou can get started with our [video conferencing example](https://www.100ms.live/examples/live-streaming-starter-kit) to see a live demo. You can also clone the [100ms-web sample app](https://github.com/100mslive/100ms-web) to see how you can extend and customize as per your needs.\n\nMeanwhile, check our [docs](/javascript/v2/features/integration) to explore information about various features and capabilities supported on the platform.\n\n## Do you have any live demo app with some default UI to check how live video/audio functionality works on your platform?\n\nYes, you can get started with one of our examples from [here](https://www.100ms.live/examples/). You can also sign up for a 100ms account to access the [dashboard](https://dashboard.100ms.live/).\n\n## We have decided to use your tool for our Livestream product we are building. What are the next steps for us to get started?\n\nYou can start with our [documentation](/docs). We also recommend checking out our GitHub for open source [sample SDKs](https://github.com/100mslive) that can aid in initial integration; Here is a piece on our [live streaming capabilities](https://www.100ms.live/interactive-live-streaming).\n\n## Do you have any resources for designers that lets them know what parts of the video player are easily configurable so they can make designs for how they want the video player to look?\n\nYou can change pretty much whatever you want, and even use a completely custom player built from scratch, the SDK doesn't have any coupling with UI. You can also check our [Figma UI Kit](https://www.figma.com/community/file/1165192525323846383).\n\n## Is it possible to capture some images shown by customers during a call for storing in a database as part of KYC?\n\nNo, but the raw video can be accessed and image recognition can be performed on the part where the user shows their ID.\n\n## The app created using the \"Video Conferencing Starter Kit\" is powered by the same infra as the live applications in production or is it on some low end test infrastructure?\n\nIt is powered by the same infra. Same as everything in production that we serve to our clients.\n\n### Can teacher handle remote user’s (student) screen (start and stop) like remotely mute/unmute of A/V ?\n\nNo, a teacher can only mute/unmute a student using the [mute/unmute remote peer](/javascript/v2/features/remote-mute) feature.\n\n### Is there a way I can specify my own room_id while creating a room?\n\nNo the `room_id` gets generated from our end.\n\n### Is there a way to get data on how many users are online?\n\nIts is possible to get the online user for a specific room based on [active room API](/server-side/v2/active-rooms/overview).\n\n### How does pagination between tiles affect the download numbers?\n\nVideo will be downloaded only for the visible tiles. For the tiles that are not visible only audio will be downloaded.\n\n## Account management\n\n### Are there any trial account limitations?\n\nThere are no feature-level limitations while using 100ms account. However, an invoice is generated when:\n\n-   Your usage exhausts the free credits for\n    -   video conferencing (10,000 minutes) or\n    -   HLS (live streaming) viewer minutes (10,000 minutes) or\n    -   HLS encoding minutes (1,000 minutes)\n-   Or if you use the recording feature\n-   Or if you use external streaming (RTMP) feature\n-   Or if use HD quality for WebRTC, or HLS viewer or recording.\n\nPlease check our [pricing page](https://www.100ms.live/pricing) or [contact us](https://www.100ms.live/contact) for more information.\n\n## Workspaces\n\n### Is there a way to provision development/testing access tokens to avoid touching production data/templates in development and staging deploys?\n\nWe have just released Workspaces, which will let you create different environment and add team members to the same 100ms account. Know more about it [here](https://www.100ms.live/blog/launching-teams-workspaces).\n\n### Is there any sandbox mode available for Development environments?\n\nYes, this is possible with Teams & workspaces on 100ms dashboard, You can create multiple workspaces and members to manage each workspace based on your requirements. For example, you can create workspaces for development and production so that experimentation during development does not affect production. For more information, please check [this blog](https://www.100ms.live/blog/launching-teams-workspaces) and also check your [100ms dashboard](https://dashboard.100ms.live/) to see how this works.\n\n### Is there a way to add a second user to our account? Or should we just share login credentials?\n\nYes, this is possible with Teams & workspaces on 100ms dashboard. Please check [this blog](https://www.100ms.live/blog/launching-teams-workspaces) for more information.\n\n### Can we create sub-account in existing account? Want to make prod and non prod account separate?\n\nYes, this is possible with Teams & workspaces on 100ms dashboard. Please check [this blog](https://www.100ms.live/blog/launching-teams-workspaces) for more information.\n\n### Could you specify multiple webhook URLs for different environments under the same account?\n\nYes, this is possible with Teams & workspaces on 100ms dashboard, You can create multiple workspaces and configure different webhooks for each of these environments. For more information, please check [this blog](https://www.100ms.live/blog/launching-teams-workspaces) and also check your [100ms dashboard](https://dashboard.100ms.live/) to see how this works.\n\n### Can I register for another 100ms account with same email address?\n\nYou can use multiple email address to create multiple workspaces within your 100ms account. This will enable you to maintain different workspaces for different environments. For example, one workspace for development and one for production. For more information, please check [this blog](https://www.100ms.live/blog/launching-teams-workspaces) and also check your [100ms dashboard](https://dashboard.100ms.live/) to see how this works.\n\n## Pricing and billing\n\n### We wanted to ask specifics on pricing and how we could calculate an estimated cost based on our use case\n\nYou can use our [pricing calculator](https://www.100ms.live/pricing) for an estimate of the cost. You can also [book a meeting](https://www.100ms.live/contact) with us directly for an in-depth discussion.\n\n### Is this pricing for standard definition or high definition? In the pricing calculator, it’s telling us to contact you guys to discuss pricing for HD\n\nYou can use our [pricing calculator](https://www.100ms.live/pricing) for an estimate of the cost. You can also [book a meeting](https://www.100ms.live/contact) with us directly for an in-depth discussion.\n\n### Does billing on minutes count when only the local peer is joined in a room?\n\nYes, if any peer joins and is publishing video or audio, it will be billed.\n\n## Authentication and tokens\n\n### What is the difference between app token and management token?\n\n-   **App token** : Used to authenticate and allow end-users (peers) to join 100ms rooms. An App Token controls Peer identity and Room permissions in your real-time or Interactive live-streaming video application.\n-   **Management token** : Used to authenticate all the requests to 100ms REST API (server-side).\n\n### Is there a easy method to create an app token?\n\nYes, you can get App tokens using a couple of approaches based on your app's lifecycle stage. Please check [this guide](./../foundation/security-and-tokens#how-to-use) for more information\n\n### Is there a easy method to create an management token?\n\nYes, if you're exploring 100ms server APIs, our Postman collection contains a pre-request script which can generate the management token if you just update the App access key and App secret from the [developers page](https://dashboard.100ms.live/developer) on your 100ms dashboard. Please check the [Postman guide](/server-side/v2/introduction/postman-guide#simplified-token-generation) for more information.\n\n### What is the validity of management and client token?\n\nIf you use the code sample from [authentication and tokens guide](./../foundation/security-and-tokens#app-token) the validity of token will be set as 24 hours. However, you can increase this to a max 90 days by updating the value for `expiresIn` field.\n\n### Why is the role variable needed when generating the app token?\n\nThe role argument should be assigned with the name of the role created in the template. A role defines who can a peer see/hear, the quality at which they publish their video, whether they have permissions to publish video/screenshare, mute someone, change someone's role. Please check [templates and roles guide](./../foundation/templates-and-roles#roles) for more information.\n\n### Can we generate two application access tokens, one for QA and one for production, so that messages from QA don't flood the production environment?\n\nYes, this is possible with Teams & workspaces on 100ms dashboard, You can create multiple workspaces and use the App access key and App secret from each of these workspaces to create different app tokens or management tokens based on your requirements. For more information, please check [this blog](https://www.100ms.live/blog/launching-teams-workspaces) and also check your [100ms dashboard](https://dashboard.100ms.live/) to see how this works.\n\n### How do I stop using 100ms token endpoint for app token generation in the react sample app and use the endpoint of my backend service?\n\nYou can set up a token generation service on your end to create app tokens and block users that are trying to join without a token that's generated from your service. Please check authentication and [tokens guide](./../foundation/security-and-tokens#app-token) for more information.\n\nYou can update the code to point to your own token service (relevant code in the sample - see getToken(...)), your token endpoint can follow a similar interface: for a given room_id and role name, return the app token JWT.\n\nYou can continue using the existing routes (room_id/role) or setup your own routes in the cloned/forked code.\n\n## Recording\n\n### Whats the difference between the beam recording vs. SFU recording?\n\nBeam recording is the browser recording, built to give users a participant-first recording experience. SFU recording is a composite recording which gets created after recording each of the individual peers and merging it. Please check this [guide](/javascript/v2/foundation/recordings) for more information.\n\n### Hey how long should it take for a recording to show up in our s3 bucket after a livestream is ended, for both beam recording and SFU?\n\nBeam recording should be available within 15-20 minutes after the call ends.\nSFU recording will take ~1.5 times the call duration, after the call ends. For example, if the call duration is 30 minutes, then SFU recording will be available in 45 minutes.\n\n### Is there a way for the beam recorder to record what is happening in the chat without the chat being open and covering any tiles?\n\nNo, chat cannot be recorded without chat being open. Beam recorder is a headless browser so it will record whatever is open in your page.\n\n### How Beam recording can pick up the chat in the video ?\n\nBeam recorder is a headless browser so it will record whatever is open in your page. Open up the chat as per the requirement in the meeting URL that is being passed to beam\n\n### Will the 100ms bot go to a video call webpage and render dynamic pages and stream/record the screen, or will it collect incoming video/audio streams only?\n\nThe 100ms bot (beam) goes to a video call webpage and renders dynamic pages and stream/record the screen only.\n\n### Can we split room recordings as per some control at our end?\n\nIt depends on the type of recording being used. If using AVP recording, webhooks can be used to retrieve the recording link for each session. If using beam recording, the recording can be split by specifying the recording duration in the API call.\n\n### Can we use the same room ID but have separate recordings as per our need?\n\nYes, it can be done by specifying a new session ID in the API call to create a new recording.\n\n### How can we retrieve the recording from a room?\n\nThere are two ways for you to retrieve recording for a room.\n\n1. Using your S3 bucket - You can configure your S3 bucket at a template level to get all recordings for all the rooms associated with that template. Check [this guide](/server-side/v2/introduction/recordings#configure-storage) for more information.\n2. Using webhooks - You can configure your server endpoint as webhook in the developers section on your [dashboard](https://dashboard.100ms.live/developer) to receive all events (including recording related events) to fetch the recording information. Check [webhooks guide](/server-side/v2/introduction/webhook) for more information.\n\n### Is it possible to make a recording automatically stop after a certain duration or at a specific time?\n\nYes, the recording can be stopped automatically by specifying the recording duration in the API call or by using the API call to stop the recording at a specific time.\n\n### Can we retrieve the list of all the recordings of a room?\n\nYes, the list of all recordings for a room can be retrieved using the API call to list recordings.\n\n### Is it possible to make a recording stop when a specific event occurs?\n\nYes, the recording can be stopped using the API call to stop the recording when a specific event occurs.\n\n### Is s3:ListBucket S3 permission required for S3 bucket access?\n\nListBucket permission is not required\n\n### Is it possible to record a live stream and allow users to continue to replay the recording even after the live stream has ended (VOD use cases)?\n\nFor that you need to have HLS recording enabled and that will give you a m3u8 file that you can play back post the session on any HLS player\n\n### Web Recording resolution, is the browser itself 1080p? Is the recording 1080p?\n\nCurrently both are 720p. We can do 1080p but it will cost more. Please check our [pricing page](https://www.100ms.live/pricing) or [contact us](https://www.100ms.live/contact) for more information.\nThe recording resolution can be changed from the dashboard\n\n### How can we debug issues with uploading video recordings to an S3 bucket?\n\nNow we have a validate button under destination in the dashboard and it will give an error if the permission are not set correctly.\n\n### What permissions are needed to allow video recordings to be uploaded to an S3 bucket?\n\nBoth read and write permissions for the bucket are required for us to upload the recordings to the S3 bucket.\n\n### How long does it take for the composite recording to be ready?\n\nThis usually takes 1.2 - 1.5 times the duration of the session. There is a delay when a lot of requests are in queue.\n\nA delay can also happen if the number of peers in the sessions increase.\n\n-   Session minutes \\* number of peers \\* 1.5x.\n-   So for example a session of 1 minute, with 5 participants. The total time taken for the recording to generate would be around 7.5 minutes (1\\*5\\*1.5).\n\n### Is Cloud recording available?\n\nYes, Please check [RTMP streaming and recording guide](/server-side/v2/Destinations/rtmp-streaming-and-browser-recording) for more information.\n\n### Is it possible to export chat logs from one of the front-end clients and save it?\n\nYes, you can handle this on your client-side and export chat logs.\n\n## Chat\n\n### Does your chat feature only support text conversations or does it support any advanced features like Profanity filtering, Rich media file uploads, etc?\n\nOur chat feature supports text conversations and emojis/reactions at the moment.\n\nHowever, you can use a third-party library on top of 100ms to build features like:\n\n1. Profanity filtering\n2. Language Translations\n3. Typing indicators,\n4. Rich media file uploads, etc.\n\n### Is chat sent over a separate WebRTC channel?\n\nChat is sent over websockets.\n\n### Is there a way to retrieve chat logs during a session?\n\nCurrently, chat is not saved and there is no way to retrieve chat logs.\n\n## Interactive Live streaming\n\n### We have decided to use 100ms to integrate live streaming into our app, how can we get started?\n\nWe have ready-made example for live streaming, you can view a live demo using [this](https://www.100ms.live/examples/live-streaming-starter-kit). You can also clone the [100ms-web sample app](https://github.com/100mslive/100ms-web) to see how you can extend and customize as per your needs.\n\nTo learn more about how live streaming works, please check the [Interactive live streaming guide](./../foundation/live-streaming).\n\n### What is the limit for room size in live streaming?\n\nThis is the same as WebRTC. Suppose we have 1000 viewers on a stream who are publishing their video, and each of them is subscribing to only 9 tiles, then:\n\n-   total number of uploaded streams + total number of downloaded streams ≤ 10,000\n-   uploaded streams = 1000\n-   downloaded streams = 1000 peers x 9 video tiles each = 9,000\n-   total = 1000+9000 ≤ 10,000.\n\nIt's still under the 10K limit.\n\n### Can users in the Live Stream send chat messages?\n\nYes. The same chat API that works in real-time conferencing (WebRTC) will work for the live streaming (HLS) viewers as well.\n\n### What is the scalability of the live streaming? What is the maximum number of viewers it can support?\n\nThe maximum number of viewers the live streaming can support with the chat function is 5k. Without the chat function, the system can scale to 50k-100k viewers.\n\n### What is the average delay of the live streaming?\n\nThe average delay of the live streaming is 10-12 seconds.\n\n### Can you provide more information on the live stream feature?\n\nYou can use 100ms platform to build Interactive live streaming (HLS) apps and to broadcast your live stream to external streaming platform like YouTube, Twitch, etc using our External streaming service (RTMP). Please check these links for more details.\n\n1. [Interactive live streaming (HLS)](./../foundation/live-streaming)\n2. [External streaming (RTMP)](/javascript/v2/features/rtmp-recording)\n\n## External streaming (RTMP)\n\n### Can the 100ms RTMP streaming be used with any URL?\n\nThe 100ms RTMP streaming can be used with any URL.\n\n### Do we need to set up our own CDN servers for RTMP URLs or can we attach 100ms URLs to video elements in HTML?\n\nThe CDN URL is not needed for HLS; it will be provided by 100ms. For RTMP, you will need to set up your own CDN servers or attach 100ms URLs to video elements in HTML.\n\n### How can I integrate a feature similar to Twitter super followers using 100ms? Also, I want to only allow the authenticated users, is that possible?\n\nYes. The live feed is only available in a room. And to enter a room you need a JWT token with the viewer role. So this is possible\n\n## Plugins\n\n### Can I build whiteboard feature on 100ms platform?\n\nThe Whiteboard feature is currently available in beta for Web platform. We will build our own communication infra for this but currently this is integrated with Pusher, you can create a Pusher account and integrate this in your app too.\n\nPlease check the [Collaborative Whiteboard guide](/javascript/v2/plugins/collaborative-whiteboard) for more information.\n\n### Do you have a list of extra plugins that can be added to live sessions?\n\nCurrently, we you can build additional interactive experiences in your app with the help of [Peer metadata](/javascript/v2/advanced-features/peer-metadata). You can integrate raise hand, polls, quizzes, etc,. using this. You can also check the existing plugins our platform such as [Virtual background](/javascript/v2/plugins/virtual-background), [Noise suppression](/javascript/v2/plugins/noise-suppression), Custom [audio](/javascript/v2/plugins/custom-audio-plugins) & [video](/javascript/v2/plugins/custom-video-plugins) plugins. We will soon be adding a whiteboard plugin as well. Please stay tuned our product updates by signing up for our newsletter from [here](https://www.100ms.live/blog#email).\n\n## Network and quality\n\n### Would you be able to tell us the approximate latency of a Creator in north America doing a real time video conference for the end user who is located in Australia?\n\nIt should be in the 200-500 ms range\n\n### Is the latency different for different devices?\n\nLatency is calculated based on the network bandwidth of the user, sometimes in low end devices, the device itself can hamper latency.\n\n### Why am I constantly getting low bandwidth alerts?\n\nThis is the [connection quality](/javascript/v2/advanced-features/connection-quality) score which changes on real time on basis of the bandwidth of the peer at the given time. If you are in strong connection but at that point the bandwidth might have dropped down the connection quality will reflect poor.\n\nYou can also look into the advance feature stat for nerds [here](/javascript/v2/advanced-features/stats) - This gives more metrics to check on why connection quality dropped.\n\n### Is it possible to dynamically set the video resolution based on the number of participants?\n\nWe have released [Simulcast](/javascript/v2/advanced-features/simulcast). With simulcast the video quality of peers will drop based on network bandwidth available.\n\nSo if there are just two, it's 1080, then when a third joins, it drops to 720, then when a seventh joins, it drops to 360.\n\n## Limits\n\n### What is the limit for room size in WebRTC?\n\n-   Limit = total number of uploaded streams + total number of downloaded streams ≤ 10,000\n    -   total number of uploaded streams is every single video feed being sent to the server, regardless of who is viewing it\n    -   total number of downloaded streams is calculated as number of WebRTC viewers x number of video tiles seen by each (regardless of tile size)\n-   here’s an example: a room with 100 peers, each with their video on, but each peer can only see 20 pax on the first page due to pagination\n    -   uploaded streams = 100\n    -   downloaded streams = 100 peers x 20 video tiles each = 2,000\n    -   total = 2,100 ≤ 10,000\n\n### For a given Room, what is the max number of concurrent WebRTC connected participants?\n\nIn a single room at a given time, we currently support 10000 streams that is 100 participants with audio and video enabled\n\n### What are max tiles config 100ms can support?\n\n| Layout | Tiles in view | Publish resolution | Max peers in room |\n| :----- | :------------ | :----------------- | ----------------- |\n| 1x1    | 1             | 720p               | 1500              |\n| 2x2    | 4             | 480p               | 450               |\n| 3x3    | 9             | 360p               | 200               |\n| 4x4    | 16            | 240p               | 100               |\n\n### What is the maximum number of people that can be supported currently?\n\nThe maximum number of people that can be supported currently is 100 for full duplex audio/video with less than 500 ms latency. For webinar-style events with stage and audience, the maximum number of people on the stage is 10, with 1000 offstage peers. For large events, the audience on TV can number in the millions with a 7-10 seconds latency.\n\n### What is the maximum capacity for group calls with 100ms video SDK?\n\nThe maximum capacity for group calls with 100ms video SDK is currently 100 participants with audio/video on.\n\n### How can I limit the number of peers in a room?\n\nYou can use the `maxPeerCount` argument available in the [roles object](/docs/server-side/v2/policy/create-template-via-api#roles-object) of Template to limit the number of peers for a particular role.\n\n### Scalability and security\n\n### Can the system scale to 50k-100k viewers if the SDK is not connected and we just want the m3u8 file?\n\nIf the SDK is not connected and you just want the m3u8 file, the system can scale to 50k-100k viewers.\n\n### Is it possible to access in-depth analytics, such as the number of attempts to reconnect, drops, high latency, and live metrics?\n\nAll metrics are collected and can be shared through an Amplitude dashboard, which will eventually be available within the dashboard. For some basic debugging, you can always rely on the \"Events Inspector\" in your 100ms dashboard.\n\n### Is the 100ms live stream SDK customizable and able to scale to millions of users?\n\nYes. 100ms main motto is to serve customers with SDKs that offers extensibility and customizability to a greater extend. You can check the [video-conferencing](https://www.100ms.live/video-conferencing) and [interactive live streaming](https://www.100ms.live/interactive-live-streaming) pages for more information.\n\n### Can you share some documentation on your information security practices?\n\nYes, please check below:\n\nSOC2 type II compliant: report sharable with a mutual NDA signed\nHIPAA: we can sign a BAA if you require\n\n### Is it ok to potentially create 1000 s of rooms over time?\n\nYes, you can create as many rooms as necessary. It's also handy to [disable a room](/server-side/v2/Rooms/disable-or-enable) after you're done using it.\n\n### Can you platform handle end-to-end encryption between just 2 users?\n\nThe only encryption we have is on the token side. That is based on the token shared from the server to the client.\n\n### Is 100ms Soc 2 complainant?\n\nYes we are Soc - 2 complaint.\n\n## Server-side\n\n### Is the functionality of disable a room and end an active room same?\n\nThe functionalities of these two APIs are different:\n\n1. [Disable/Enable a room API](/server-side/v2/Rooms/disable-or-enable) - you can use this API to disable/enable the room to block/allow peers to join the room.\n2. [End an active room API](/server-side/v2/active-rooms/end-active-room) - you can use this API to end an ongoing session in a room. Optionally you can use the `lock` argument to disable the room future peer joins.\n\n### Is there a way to close a room using a server-side API?\n\nYou can use [end an active room API](/server-side/v2/active-rooms/end-active-room) to end an ongoing session in a room. Optionally you can use the `lock` argument to disable the room future peer joins.\n\n### Is there a way to mute a participant using a server-side API?\n\nYou need to follow the below steps to achieve this:\n\n1. Create another role in your template by disabling audio publish strategies, for example: no-audio. You can either use the [create a role API](/server-side/v2/policy/create-update-role) or templates page on [dashboard](https://dashboard.100ms.live/dashboard) to do this.\n2. On click of a button from the UI, you need to trigger the [update-peer server side API](/server-side/v2/active-rooms/update-a-peer) or [Change role client-side API](/javascript/v2/features/change-role) to change the role of the particular participant (peer) to no-video role to disable audio.\n\n### Is there a way to disable video for a participant using a server-side API?\n\nYou need to follow the below steps to achieve this:\n\n1. Create another role in your template by disabling video publish strategies, for example: no-video. You can either use the [create a role API](/server-side/v2/policy/create-update-role) or templates page on [dashboard](https://dashboard.100ms.live/dashboard) to do this.\n2. On click of a button from the UI, you need to trigger the [update-peer server side API](/server-side/v2/active-rooms/update-a-peer) or [Change role client-side API](/javascript/v2/features/change-role) to change the role of the particular participant (peer) to no-video role to disable video.\n\n### Can you explain the differences between the HLS recording and beam recording webhook events?\n\nHLS recording events are related to the recording enabled for Interactive live streaming (HLS) sessions, whereas beam recording events are only applicable to recording enabled for external streaming (RTMP) or browser recording for WebRTC sessions.\n\nPlease check the below links for more information:\n\n1. [Interactive live streaming (HLS)](/javascript/v2/foundation/live-streaming)\n2. [RTMP streaming/recording](/server-side/v2/Destinations/rtmp-streaming-and-browser-recording)\n\n### For incoming webhooks from 100ms to our API, is there a list of IPs that can be whitelisted\n\nYes, we have a list of IPs that can be whitelisted. [Here](/server-side/v2/introduction/webhook#ip-whitelisting\") is the list.\n\n### Is there an API call we can make to set the webhook URL and headers on our account?\n\nNo. Currently there is no API to update the webhook URL and headers. The same can be done from 100ms Dashboard directly\n\n### Do you have some static IP for 100ms, that we can whitelist your hits at our end?\n\n100ms provides two methods to whitelist traffic from 100ms.\n\n1. [Domain and port whitelisting](/server-side/v2/introduction/firewall-and-ports)\n2. [Securing webhooks](/server-side/v2/introduction/webhook#how-to-secure-webhooks)\n\n### Do you have any GCP IP range assigned to your GCP workloads from where you would write files?\n\nThe GCP is also on public network so no static IP\n\n### What is the file-types you would write to bucket so we can whitelist them?\n\nWe will write `mp4`, `txt`, `webm` files.\n\n### We need to know if there is a way to end an active session programmatically (reset the room so that everyone is kicked from the meeting and it starts a new session).\n\nWe have an end point that helps you end an active session immediately. You can check [this](/server-side/v2/active-rooms/end-active-room) to understand how the API works.\n\n### Is there any way to limit participants in a room?\n\nWe don't limit the participants currently, but we can make it part of role configuration where we can add a maximum number of participants per role by setting the \"maxPeerCount\" attribute while you [create/update a role](/server-side/v2/policy/create-update-role).\n\n### How can I handle role change requests on my backend? Is there any webhook that exists or is planned?\n\nCurrently, role change is initiated by a designated role. A role change REST API is on the roadmap.\n\n### Is there a way to handle role change requests on the backend, such as through a webhook or API?\n\nYes, you can use [Update a peer API](/server-side/v2/active-rooms/update-a-peer) to change the role of a peer from backend.\n\n### Have queries related to for backend we need APIs to create room and joining people to it and for website (Frontend) need guidance for components like video buttons and participants etc.\n\nYou can use the [Create room server API](/server-side/v2/Rooms/create-via-api). The sample app for reference can be found [here](https://github.com/100mslive/100ms-web)\n\n### Just want to know that if we create role with API and want changes to be synced in react SDK, so that we can use that role?\n\nYes that is possible the template created on dashboard/API is universally used across all 100ms client SDKs.\n\n### Is there a way to schedule these rooms for a certain date and time and send invites to certain email ids\n\nThat needs authentication for a user and you would need to handle this on the UI. You can use the [Create room API](/server-side/v2/features/room#create-room-using-api) to Create multiple rooms and schedule meetings as required by using them in queue. And only give the option of joining room when the meeting time comes up.\n\n### Can we disable room by id?\n\nYes this is possible. [Disable/enable a room API](/server-side/v2/Rooms/disable-or-enable) supports room_id as an argument as well.\n\n### How do I limit the session to a specified duration?\n\nTo achieve this, you can use the [End an active room API](/server-side/v2/active-rooms/end-active-room).\n\nFor example, if you must limit the duration of a session to 30 minutes:\n\n-   Once the session starts, you can start a timer once you receive the [session.open.success](/server-side/v2/introduction/webhook#sessionopensuccess) webhook event,\n-   Wait till the duration (timer) of the session reaches 30 minutes,\n-   Once reached, trigger the [End an active room API](/server-side/v2/active-rooms/end-active-room) to end the session and kick out the peers from the session.\n\n> Note: If you set the lock argument to `true`, it will end the active room, and users will not be able to join the room later. You can use [enable a room API](/server-side/v2/Rooms/disable-or-enable) or [dashboard](https://dashboard.100ms.live/rooms) to enable the room again.\n\n## Analytics\n\n### Is there any usage analytics dashboard available to check various metrics associated with our account?\n\nCurrently, we don't have any dashboard for usage analytics, but we do it have it in our roadmap. We will keep you notified as soon as we have it. Subsribe to our newsletter to receive monthly updates about on 100ms product releases.\n\n### Does the 100ms video SDK provide analytics on room, session, and each user, including data such as time spent per user, total session length, and number of peers in a room?\n\nYou can get analytics about rooms, sessions, peers, etc in a multiple ways based on your requirements and feasibility.\n\n1. You can use the [List Sessions server API](/server-side/v2/Sessions/list-sessions) to fetch the list of sessions for a particular data/time range and you can also filter these for a particular room. This API will provide data such as list of peers, their room join/leave time, session start/end time, etc,.\n\n2. If you need to get the sessions details for an active room (ongoing session), you can use our [Active room server APIs](/server-side/v2/active-rooms/overview) to fetch the details and perform some actions on peer from your server side.\n","<Content alias=\"liveStreaming\" />":"## Overview\n\nLive video interactions can span various levels of interactivity. For example, in a virtual event, some participants can be on stage talking to each other, whereas participants in the audience can be listening to them.\n\nAt 100ms, we think of this as the **3 levels of interactivity**. 100ms enables you to build live video use-cases by mixing and matching these 3 levels to get to your ideal solution.\n\n-   **Level 1**: Full duplex audio/video in real-time\n\n    Level 1 participants publish their audio/video, and interact with others in sub-second latency. This is real-time video conferencing, similar to Zoom or Google Meet.\n\n-   **Level 2**: Webinar-style audience in real-time\n\n    Level 2 participants consume audio/video from level 1 participants with sub-second latency, without publishing their own audio/video. Level 2 participants can engage with level 1 through messaging (chat, emojis, custom events). This is similar to a Zoom webinar.\n\n    Levels 1 and 2 are enabled using WebRTC.\n\n-   **Level 3**: Live stream audience consuming in near real-time\n\n    Level 3 participants consume a composite live stream in near real-time (<10 secs of latency) without publishing their audio/video. They can interact with other participants via messaging. This is similar to viewers on Twitch or YouTube Live, and is enabled via **100ms Interactive Live Streaming**.\n\n    Live streaming uses [HLS](https://www.100ms.live/blog/hls-101-beginners-guide) to achieve near real-time latency at scale.\n\nThe [roles primitive](/docs/javascript/v2/foundation/templates-and-roles) can be used to define capabilities of a participant and associate them to an interaction level. A participant can move between levels using a single API call to change roles.\n\n## Try Interactive Live Streaming\n\nUse our [Live Streaming Starter Kit](https://www.100ms.live/marketplace/live-streaming-starter-kit) to try out the experience before you write a line of code.\n\n<StepsToc\n  parentId=\"try-live-streaming\"\n  descriptions={[\"Use our Live streaming starter kit to try out the experience before you write a line of code.\", \"Understand the difference between a stream broadcaster and stream viewer.\", \"Use the demo app link to go live for the first time as a broadcaster and join the stream as viewer.\", \"Use the 100ms self-serve dashboard to update the layout, aspect ratio, etc of the stream.\"]}\n>\n\n<StepsContainer id=\"try-live-streaming\">\n\n### Create a new app\n\n![Live streaming starter kit](/docs/docs/v2/live-streaming-starter-kit.png)\n\n1. Make sure that you have [an account with 100ms](https://dashboard.100ms.live/register) and can access the [100ms dashboard](https://dashboard.100ms.live/)\n1. On the dashboard, create a new app using the Live Streaming Starter Kit\n1. Specify a subdomain and region to deploy the app\n\n### Understand roles\n\n![Live Streaming roles](/docs/docs/v2/live-streaming-roles.png)\n\nThis starter kit configures your new app with [two roles](/docs/javascript/v2/foundation/templates-and-roles):\n\n-   `broadcaster`: This role represents a streamer who publishes their audio/video. There can be multiple peers who join as broadcasters\n-   `hls-viewer`: This role represents a circle 3 audience, who subscribes to the composite live stream and can interact using messaging\n\n### Go live\n\n![Go live](/docs/docs/v2/live-streaming-go-live.gif)\n\n1. To go live for the first time, join the room as a `broadcaster` and start the live stream\n2. Once the stream has started, join the room as an `hls-viewer` and you should be able to see the ongoing live stream\n3. Use chat messages to interact between the viewer and the broadcaster\n\n### Customize the stream\n\n![Go live](/docs/docs/v2/live-streaming-customise.png)\n\nBy default, the live stream is composed in landscape mode for desktop viewers (with an aspect ratio of 16:9). You can customise the live stream for viewers on mobile or to support multiple broadcaster tiles.\n\n1. On the 100ms dashboard, click the gear icon on your app to open configuration settings\n2. Go to \"destinations\" and scroll down to find live stream (HLS) configuration\n3. Update the configuration based on your needs:\n    - If your viewers are on mobile, change the video aspect ratio to 9:16\n    - If you have multiple broadcasters joining in, choose grid or active speaker based on your needs\n    - In case of grid layout, choose the tile size that fits your use-case. For example, a stream with 2 streamers looks better with 1:1 tiles.\n\n</StepsContainer>\n\n## Integrate in your app\n\nTo integrate 100ms Interactive Live Streaming in your app, follow these steps:\n\n1. [Enable live streaming destination](#enable-destination)\n2. [Integrate the 100ms SDK in your app](#sdk-integration)\n3. [Integrate live stream playback](#live-stream-playback)\n4. [Video on demand (VOD) use cases](#video-on-demand-vod-use-cases)\n\n### Enable destination\n\n![Enable HLS](/docs/docs/v2/live-streaming-enable.gif)\n\nIf your app is based on the Live Streaming Starter Kit (as shown above), the live streaming destination is enabled out-of-the-box.\n\nFor custom apps, you can enable the live streaming destination manually:\n\n1. Open configuration for your existing app using the 100ms dashboard\n1. In the \"destinations\" tab, enable \"Live Streaming with HLS\"\n1. Ensure that you have roles for the broadcaster (who can publish their audio/video) and the viewer (who cannot publish audio/video)\n\n### SDK integration\n\nUse the 100ms client-side SDKs to integrate streaming in your application. See code snippets for the client-side SDK [here](/docs/javascript/v2/features/hls).\n\n### Live stream playback\n\nUsing our client-side SDKs, you can enable live stream playback and add interactive experiences like chat, raise hand and other functionalities to your app using [peer metadata](/docs/javascript/v2/advanced-features/peer-metadata).\n\nThe process is so simple:\n\n1. Once you [start](#step-3-go-live) live streaming, you will get an HLS URL (M3U8 URL) which you can use for playback.\n2. You can use the [client-side SDK](/docs/javascript/v2/features/hls) to get the HLS URL by checking the [current state](/docs/javascript/v2/features/hls#current-room-status) of the room and start playback.\n\nIf you need to only enable HLS playback and don't need interactivity, you can follow one of the below approaches to get the HLS URL:\n\n-   **Webhook:** You can listen to `hls.started.success` [webhook event](/docs/server-side/v2/introduction/webhook#hls-started-success) and get the HLS URL from the `url` field. Please check the [webhooks guide](/docs/server-side/v2/introduction/webhook) to learn more about webhooks.\n-   **Static URL:** This configuration will help you get a static URL for playback. You can enable the `Static playback URLs` in your template from the [dashboard](https://dashboard.100ms.live/dashboard). You can go to Destination > enable \"Live streaming with HLS\" > under \"Customise stream video output\" section > enable \"Static playback URLs.\"\n\n    ![Enable Static URL](/docs/docs/v2/enable-static-url.png)\n\n    -   _Format_: https://cdn.100ms.live/beam/<customer_id>/<room_id>/master.m3u8\n    -   `customer_id`: replace this placeholder with your customer_id from [developer section](https://dashboard.100ms.live/developer) on your dashboard.\n    -   `room_id`: replace this placeholder with the `room_id` of the respective room from which the stream will be broadcasted.\n\n### Video on Demand (VOD) use cases\n\nIf you wish to replay your HLS stream for Video on demand (VOD) use case, 100ms provides the capability to record the HLS stream which will be posted to your webhook as a ZIP file of M3U8 format (same playback format as HLS) with all the chunks once the stream ends.\n\nYou can start recording a live stream using the [client-side SDK](/docs/javascript/v2/features/hls) or using the [server API](/docs/server-side/v2/Destinations/rtmp-streaming-and-browser-recording#start-streaming-recording). Once the HLS recording is completed, you will get the details of recording as a callback to the webhook configured in your account. Check `hls.recording.success` [webhook event](/docs/server-side/v2/introduction/webhook#hls-recording-success) for more information.\n","<Content alias=\"network\" />":"## Introduction\n\n100ms handles a lot of standard audio/video issues internally without the developer needing to handle it explicitly. This page describes some common issues and how 100ms handles them.\n\nThere are 3 major issues of issues that can occur in a audio/video conference\n\n- Device capture exceptions\n- Network disconnection/switching network exceptions\n- Network bandwidth limitation/large room exceptions\n\n## Device failure\n\nA common issue is a failure to capture mic/camera even though the user has all devices connected. Common causes include differences in OS/browser implementations of device capture APIs, permission not being granted by the user, or the device being in use by another program.\n\nThe usual recourse in these exceptions is to prompt a user action - \"Grant permission\", \"Please close any other app using microphone\", \"Switch to Safari\"\n\n100ms' SDKs come with a [preview method](../features/preview) that can be called before joining a room. This will test for device failures, network connectivity and throw errors with a recommended user action.\n\n## Network disconnection/Switching networks\n\nAnother set of common issues are minor network blips. Common causes are when a user moves from one room to another, or switches from wifi to data.\n\n100ms will send a notification within 10s of detecting a network disconnection and will automatically retry when connection is available upto 60s. After 60s, a terminal error is thrown to the client.\n\n## Network bandwidth limitation/large rooms\n\nA common occurrence in large rooms, or constrained networks is dropped frames. This results in robotic voices, frozen frames, pixelated screenshare or entire pieces of audio/video that are lost.\n\n100ms will automatically prioritize connections if network limits are reached. This prioritization can be controlled by developers using the dashboard or 100ms APIs.\n\neg. A developer can prioritize host's screenshare higher than guests' videos. In low bandwidth constraints, guests' videos will be turned off, while host's screenshare will remain.\n","<Content alias=\"recordings\" />":"Recordings are an important part of the live video stack as they convert live, ephemeral content into a long-term asset. But the use of this asset varies from business to business depending on their respective use case.\n\nFor example, one of the common use cases for recording is for archival purposes versus, for some, its content to be publicized.\n\nBased on your end goal, you can choose one of the recording types and its implementation. You can understand some key differences using the comparison table below.\n\n## Recording types\n\n- [Recording types](#recording-types)\n  - [Quick Comparison](#quick-comparison)\n  - [Browser Recording \\[Recommended\\]](#browser-recording-recommended)\n  - [SFU Recording \\[Advanced\\]](#sfu-recording-advanced)\n  - [Recordings for Live Streaming Use-cases](#recordings-for-live-streaming-use-cases)\n    - [Video-on-demand Recording](#video-on-demand-recording)\n    - [Multiresolution Recording](#multiresolution-recording)\n- [Configure storage](#configure-storage)\n  - [How to configure recording storage?](#how-to-configure-recording-storage)\n\n### Quick Comparison\n\n| Recording Features                   | Browser Recording [Recommended] | SFU Recording [Advanced]         |\n| ------------------------------------ | ------------------------------- | -------------------------------- |\n| Resolution                           | Upto 1080p                      | Only 720p                        |\n| Participant-level Audio/Video Tracks | Not Available                   | Available                        |\n| Portrait/Landscape Mode              | Available                       | Not Available                    |\n| Start/Stop Recording                 | On-demand                       | Auto start/stop with the session |\n| Custom Layout                        | Available                       | Not Available                    |\n| Role-Specific Recording              | Available                       | Not Available                    |\n| Recording Output                     | MP4                             | MP4, WebM                        |\n\n\n### Browser Recording [Recommended]\n\nBrowser recording is built to give users a participant-first recording experience. When enabled, our browser-based bot Beam joins a room to record the viewport like any other participant. The output is an MP4 file that captures the room's published audio/video tracks together into one single file. This option removes the complexity of syncing various audio/video tracks and offers an intuitive, participant-first recording experience. An example use case is to record a sales meeting for later usage.\n\n**Resources**\n\n-  [How to implement Browser Recording](https://www.100ms.live/docs/server-side/v2/Destinations/rtmp-streaming-and-browser-recording)\n\n### SFU Recording [Advanced]\n\nSFU recording is built for advanced use cases, which require individual audio and video tracks for each participant. This recording option allows you to isolate recording at a participant level. Track recording allows you to record audio and video streams separately, making it easier to edit, layer, or reuse each of them. An example use case is to record a live podcast and later edit it for publishing.\n\nYou can get track recordings in two forms:\n\n-   Individual: Media for each peer is provided as a separate mp4 file. This file will have both audio and video of the peer. These files can be used for offline review or in implementing custom composition.\n\n-   Composite [currently in beta]: Audio and video of all peers are composed as per their joining/leaving the meeting and provided as a single mp4. This file can be used for offline viewing of the meeting.\n\n**Resources**\n\n-   [How to implement SFU Recording](https://www.100ms.live/docs/server-side/v2/Destinations/recording)\n\n### Recordings for Live Streaming Use-cases\nThese are the types of live streaming recordings:\n\n#### Video-on-demand Recording\n\nVideo-on-demand recording is available for our Interactive Live Streaming capability. This recording will be a file with an M3U8 file (same playback format as HLS), which can be used for replaying your HLS stream. This option is more suitable for Video-on-Demand use cases. For the implementation of this type of recording, please [contact us](https://www.100ms.live/contact).\n\n#### Multiresolution Recording\n\nA multi-resolution recording is available for Interactive Live Streaming capability. This type of recording will have a multi-file structure for all available resolutions of the stream. The output will be multiple MP4 files with these resolutions: 240p, 480p, 720p, and 1080p. For an implementation of this type of recording, please [contact us](https://www.100ms.live/contact).\n\n\n## Configure storage\n\nYou can specify a cloud storage location for your recording files in your template. Our current offering allows you to store your recordings in Amazon S3 buckets. Once you configure the S3 config of your bucket in a template, all respective recordings of sessions created via those templates will be sent to your configured bucket. This holds true for all types of aforementioned recordings.\n\n### How to configure recording storage?\n\n1. Generate your credentials; for this example, you can check out a [guide from AWS](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html). You can skip this step if you already have credentials. Please note that if you are running a Browser recording, you need to give upload permission to your key, but if you are running an SFU recording, you need to give both upload and download permission.\n\n2. Go to 100ms Dashboard and go to template **configuration by selecting the configure icon**.\n\n![Create your first app](/docs/docs/v2/recording-storage-settings-step2.png)\n\n3. Head over to the **Destinations** tab.\n\n![Destinations](/docs/docs/v2/recording-storage-settings-step3.png)\n\n1. Key in your credentials (using an example of an S3 bucket here):\n\n    - Access Key: Access Key generated from AWS IAM Console\n    - Secret Key: Secret Key generated from AWS IAM Console\n    - Bucket: Name of the bucket in S3\n    - Region: Name of the region, for example, ap-south1\n    - Prefix for Upload Path: Define the directory name (optional)\n\n![Destinations](/docs/docs/v2/recording-storage-settings-step4.png)\n\n5. Use the **Validate Config** button to test your storage setup.\n\n![Destinations](/docs/docs/v2/recording-storage-settings-step5.png)\n\n6. You will see a message that the AWS **configuration was successfully validated**.\n\n![Destinations](/docs/docs/v2/recording-storage-settings-step6.png)\n\nThe above message ensures that your configuration is successful now, and all your recordings will start collecting in your configured destination.\n","<Content alias=\"rtmpExternalConfig\" />":"- Please refer to the platform specific documentation for details on how to obtain the stream URL and stream key. Here are some examples: \n    -   [YouTube](https://support.google.com/youtube/answer/2907883?hl=en&ref_topic=9257892)\n    -   [Facebook](https://www.facebook.com/help/587160588142067)\n    -   [Instagram](https://about.instagram.com/blog/tips-and-tricks/instagram-live-producer)\n    -   [Twitch](https://help.twitch.tv/s/article/twitch-stream-key-faq?language=en_US)\n    -   [LinkedIn](https://www.linkedin.com/help/linkedin/answer/a564446/go-live-using-a-custom-stream-rtmp)","<Content alias=\"securityTokens1\" />":"## Introduction\n\nIn 100ms, two types of tokens are used to authenticate requests coming from your `Client apps` and `Backend application server` into the 100ms platform.\n\n-   [App token](#app-token) : Used to authenticate and allow end-users (peers) to join 100ms rooms. An App Token controls `Peer identity` and `Room permissions` in your real-time or Interactive live-streaming video application.\n-   [Management token](#management-token) : Used to authenticate all the requests to 100ms REST API.\n\nYou can set the expiry to both these tokens; if you follow the code samples from this guide, the expiry will be set as 24 hours. However, a best practice is to set the expiry as short as feasible for your application.\n\nYou must host your server to generate these tokens while transitioning your app to production.\n\n## App Token\n\n100ms _client-side SDKs_ use App Tokens to authenticate a peer (participant) while [joining a room](./../features/join). Generate this token on the server side and make it available for your client-side apps that use the 100ms SDKs.\n\nTo create an App Token, you need to use `app_access_key`, `app_secret`, `room_id`, and `user_id`.\n\n-   You can get the `app_access_key` and `app_secret` from the [developer section](https://dashboard.100ms.live/developer) in your 100ms dashboard. This key and secret differ across workspaces so please ensure you are in the intended workspace before copying these credentials. \n-   **room_id**: This is the unique identifier for your room. You can get it from the [rooms page](https://dashboard.100ms.live/rooms) in your dashboard or in the response payload of the [create room server-side API](/docs/server-side/v2/Rooms/create-via-api).\n-   **user_id**: This identifier can be used to map a 100ms peer to your own internal user object for business logic. Specify your internal user identifier as the peer's user_id. If not available, use any random string.\n\n### How to use?\nYou can get App tokens using a couple of approaches based on your app's lifecycle stage. Please check the below sections for more information:\n\n-   [Set up your own authentication endpoint](./../foundation/security-and-tokens#set-up-your-own-authentication-endpoint)\n-   [Get app tokens from the token endpoint](./../foundation/security-and-tokens#get-app-tokens-from-the-token-endpoint)\n-   [Get app tokens from the dashboard](./../foundation/security-and-tokens#get-app-tokens-from-the-dashboard)\n\n#### Set up your own authentication endpoint\n\nWhen you have completed your integration with 100ms, and while transitioning your app to production, we recommend you create your backend service for app token generation; use the code snippet below and set up the token generation service as per your preferred programming language.\n","<Content alias=\"securityTokens2\" />":"#### Get app tokens from the token endpoint\n\nIf you are building integration with 100ms, you can get app tokens from the 100ms token endpoint without hosting a token generation backend service. Refer to [this guide](./../guides/token-endpoint#get-an-app-token-using-token-endpoint) for more information. \n\n#### Get app tokens from the dashboard\n\nIf you are building your first app by following one of our [quickstart guides](/docs/javascript/v2/guides/javascript-quickstart), you can get the app token directly from 100ms dashboard to join a room for the first time. Refer to [this guide](./../guides/token#get-a-temporary-token-from-100ms-dashboard) for more information.\n\n## Management Token\n\n100ms uses management tokens to authenticate REST APIs. \n\nIf you're evaluating 100ms [server APIs](/docs/server-side/v2/introduction/basics), you can use our public [Postman collection](/docs/server-side/v2/introduction/postman-guide#fork-the-collection), which doesn't require you to create a management token as we've managed it using a [pre-request script](/docs/server-side/v2/introduction/postman-guide#simplified-token-generation) within the collection.\n\nIf you're transitioning your app to production, we recommend you create your backend service for management token generation. You must use the `app_access_key` and `app_secret` from the [developer section](https://dashboard.100ms.live/developer) in your 100ms dashboard to create the management token.","<Content alias=\"templatesAndRoles\" />":"## Introduction\n\nTemplate is the blueprint of the room. It defines the settings of the room along with the behavior of users who are part of it.\nRoom will inherit the properties from a template that you have specified while creating it. If you have not specified any template then it will pick the default template.\nEach template will be identified by its id or name. For example `default_videoconf_7e450ffc-8ef1-4572-ab28-b32474107b89`\n\nUsers can see or modify the templates by visiting [Templates on Dashboard](https://dashboard.100ms.live/templates) or via API(see below). After updating a template or some part of its like permissions, you need to rejoin or restart the session for the template updates to take place.\n\n![Template](/docs/docs/v2/template.png)\n\n## Roles\n\nRole is a collection of permissions that allows you to perform certain set of operations while being part of the room. It has the following attributes:\n\n### Name\n\nEvery role has a name that should be unique inside a template. This name will be used while generating app tokens and referencing inside a template.\n\n### Priority\n\nPriority will determine the order in which the roles will be degraded. A lower number represents a higher priority.\n\n### Publish Strategies\n\nPublish strategies will be used to determine the tracks and their quality which can be published by this role.\n\n| Strategy            | Description                                                                                                                                                                                                                                                                                   |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Can share audio     | Whether the role is allowed to publish the audio track or not.                                                                                                                                                                                                                                |\n| Can share video     | Whether the role is allowed to publish the video track or not                                                                                                                                                                                                                                 |\n| Can share screen    | Whether the role is allowed to do screen share or not                                                                                                                                                                                                                                         |\n| Video quality       | Quality of the video track which is going to be published by the role. Currently, 6 video qualities `1080p`,`720p`, `480p`, `360p`, `240p` and `120p` are predefined and the user can select one out of these values. This option will be visible only if the **Can share video** is enabled. |\n| Screenshare quality | Quality of the screen which is going to be shared by the role. Currently, 2 video qualities `720p` and `1080p` are predefined and the user can select one out of these values. This option will be visible only if the **Can share screen** is enabled.                                       |\n\n### Subscribe Strategies\n\nSubscribe strategies will be used to determine what all roles, this role can subscribe to.\n\n| Strategy              | Description                                                                                                                                                                                                                                                      |\n| --------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Subscribe to          | You can select all the roles of the template which this role will subscribe                                                                                                                                                                                      |\n| Subscribe Degradation | When this flag is turned on, one or more remote video tracks will be muted automatically when the network condition worsens. Such tracks will be marked as `degraded`. When the network condition improves, the `degraded` tracks will automatically be unmuted. |\n\n### Permissions\n\nPermissions will contain a list of additional privileges that this role will have.\n\n| Permission                           | Description                                                                                                                                                                     |\n| ------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Can change any participant's role    | With this permission, user will be able to change the role of the other participant's who are present in the room                                                               |\n| Can mute any participant             | With this permission, user will be able to mute any participant's audio and/or video.                                                                                           |\n| Can ask participant to unmute        | With this permission, user will be able to ask any participant to unmute their audio and/or video.                                                                              |\n| Can remove participant from the room | With this permission, user will be able to remove any participant from the current session of the room.                                                                         |\n| Can end current session of the room  | With this permission, user will be able to end the current session of the room.                                                                                                 |\n| Can receive room state               | With this permission, user will be able to receive room state like peer-count and peer-list on the preview screen.                                                              |\n| Can start/stop RTMP livestream       | With this permission, user will be able to publish live audio/video livestream externally to social media and custom platforms (e.g Youtube/Facebook/Twitter).                  |\n| Can start/stop HLS livestream        | With this permission, user will be able to publish audio/video livestream in the HLS format.                                                                                    |\n| Can start/stop Beam Recording        | With this permission, user will be able to record meeting/livestream via the browser recording approach where a bot will join the room and record the meeting/livestream as is. |\n\n## Advanced Settings\n\nAs the name suggests, Advanced Settings section contains more settings and controls for the advanced user.\n\n![Template](/docs/docs/v2/advanced-settings.png)\n\n### Preview room state\n\nPreview room state enables you to build a \"preview\" screen which shows the state of the room before joining. This room state includes a list of peers, which can be used to show who is in the room. Preview room state also includes recording and streaming state.\n\nPreview room state settings define strategy of sending state updates to client SDKs.\n\n| Setting                                  | Description                                                                                                                                                                                                                                        |\n| ---------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Room-state Message Interval (in seconds) | Room-state data will be sent over a regular interval of these many seconds. Consequently, the room state displayed on the preview screen will refresh accordingly. This value must be a multiple of 5, between 5 and 3600 seconds, both inclusive. |\n| Send Peer List in Room-state             | Enabling this will send peer-list info of the room. If disabled, only the peer count is sent.                                                                                                                                                      |\n| Enable Room-State                        | If enabled, room-state data will be sent to the preview screen. If disabled, no such room-state data will be sent.                                                                                                                                 |\n| Roles with room-state permission         | This is the list of all the roles which will get the room-state data. You can also individually toggle these settings in the Roles tab under the Permissions section.                                                                              |\n","<Content alias=\"token\" />":"## Create an 100ms account\n\n- Create an account at [Dashboard of 100ms](https://dashboard.100ms.live/)\n\n![Create Account](/docs/guides/token/create-account.png)\n\n- After you have created your account you have to Confirm your Email , check the promotions tab in your Mail Box if you can't find it.\n\n- Login to the Dashboard and you will see an option to Create your first app. Click on it.\n\n![Create your first app](/docs/guides/token/starter-kit-initialize-first-step.png)\n\n- Then you would see this popup with multiple starter kits, hover over one of the starter kits and click `Deploy`. We will choose \"Video Conferencing\" for now.\n\n![Initialize Started Kit](/docs/guides/token/starter-kit-initialize.png)\n\n- In the `Choose your deployment` step, select 100ms and enter the subdomain you wish in the `Subdomain` field.\n\n![Domain details](/docs/guides/token/domain-details.png)\n\n- After you're App is set click on \"Go to Dashboard\" or [Go Here](https://dashboard.100ms.live/dashboard)\n\n![Dasboard](/docs/guides/token/go-to-dashboard.png)\n\n## Create a room\n\n- Go over to [Room in Dashboard](https://dashboard.100ms.live/rooms) and click on \"Create Room\" , While creating a room you can specify it's name, roles or enable recording.\n\n![Create Room](/docs/guides/token/create-room.png)\n\n- You will now see \"Room Details\" section and we have a `room_id` created, copy it somewhere.\n\n![Room Id](/docs/guides/token/room-id.png)\n\n## Get a temporary token from 100ms dashboard\n\nAny client connecting calling 100ms' service needs to authenticate using an auth token. In production you would have your own servers generating the tokens (see more [here](/docs/javascript/v2/foundation/security-and-tokens)), but for a quick start you can use the dashboard to create a token for you. The token will expire in 24 hours and should not be hard-coded into a production app.\n\n- To get a temporary token click on \"Join room\" button.\n\n![Join Room](/docs/guides/token/join-room.png)\n\n- In the popup that shows up click on icon with a key shape next to the role you want to join as.\n\n![Copy Token](/docs/guides/token/copy-token.png)\n\nThe token will be copied to your clipboard. Use this along with the `room_id` to proceed with the quickstart guide."}